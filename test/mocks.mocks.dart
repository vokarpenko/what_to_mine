// Mocks generated by Mockito 5.0.17 from annotations
// in what_to_mine/test/mocks.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i5;
import 'package:what_to_mine/src/data/cache/memory_storage.dart' as _i7;
import 'package:what_to_mine/src/data/client/miner_stat_client.dart' as _i10;
import 'package:what_to_mine/src/data/db/app_database.dart' as _i11;
import 'package:what_to_mine/src/data/db/dao/used_gpu_dao.dart' as _i2;
import 'package:what_to_mine/src/data/db/dao/user_hash_algorithm_dao.dart' as _i3;
import 'package:what_to_mine/src/data/db/entities/used_gpu_entity.dart' as _i18;
import 'package:what_to_mine/src/data/db/entities/user_hash_algorithm_entity.dart' as _i19;
import 'package:what_to_mine/src/data/gateway.dart' as _i15;
import 'package:what_to_mine/src/data/json_reader/json_reader.dart' as _i12;
import 'package:what_to_mine/src/domain/algorithms/hash_algorithm.dart' as _i9;
import 'package:what_to_mine/src/domain/currency/crypto_currency.dart' as _i8;
import 'package:what_to_mine/src/domain/currency/earnings.dart' as _i17;
import 'package:what_to_mine/src/domain/gpu/gpu.dart' as _i13;
import 'package:what_to_mine/src/domain/gpu/used_gpu.dart' as _i16;
import 'package:what_to_mine/src/domain/settings.dart' as _i6;
import 'package:what_to_mine/src/utils/scheduler/background_task_scheduler.dart' as _i14;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUsedGpuDao_0 extends _i1.Fake implements _i2.UsedGpuDao {}

class _FakeUserHashAlgorithmDao_1 extends _i1.Fake implements _i3.UserHashAlgorithmDao {}

class _FakeStreamController_2<T> extends _i1.Fake implements _i4.StreamController<T> {}

class _FakeDatabaseExecutor_3 extends _i1.Fake implements _i5.DatabaseExecutor {}

class _FakeSettings_4 extends _i1.Fake implements _i6.Settings {}

/// A class which mocks [MemoryStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockMemoryStorage extends _i1.Mock implements _i7.MemoryStorage {
  MockMemoryStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void putCryptoCurrencies(List<_i8.CryptoCurrency>? cryptoCurrency) =>
      super.noSuchMethod(Invocation.method(#putCryptoCurrencies, [cryptoCurrency]), returnValueForMissingStub: null);

  @override
  void clearCryptoCurrenciesCache() =>
      super.noSuchMethod(Invocation.method(#clearCryptoCurrenciesCache, []), returnValueForMissingStub: null);

  @override
  void putEditedHashrates(List<_i9.HashAlgorithm>? hashrates) =>
      super.noSuchMethod(Invocation.method(#putEditedHashrates, [hashrates]), returnValueForMissingStub: null);

  @override
  void putEditedHashrate(String? name, double? hashrateValue) =>
      super.noSuchMethod(Invocation.method(#putEditedHashrate, [name, hashrateValue]), returnValueForMissingStub: null);

  @override
  void putEditedPower(String? name, int? power) =>
      super.noSuchMethod(Invocation.method(#putEditedPower, [name, power]), returnValueForMissingStub: null);

  @override
  List<_i9.HashAlgorithm> getEditedHashrate() =>
      (super.noSuchMethod(Invocation.method(#getEditedHashrate, []), returnValue: <_i9.HashAlgorithm>[])
          as List<_i9.HashAlgorithm>);

  @override
  void clearEditedHashrateCache() =>
      super.noSuchMethod(Invocation.method(#clearEditedHashrateCache, []), returnValueForMissingStub: null);
}

/// A class which mocks [MinerStatClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockMinerStatClient extends _i1.Mock implements _i10.MinerStatClient {
  MockMinerStatClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i8.CryptoCurrency>> getCryptoCurrenciesListFromApi() =>
      (super.noSuchMethod(Invocation.method(#getCryptoCurrenciesListFromApi, []),
              returnValue: Future<List<_i8.CryptoCurrency>>.value(<_i8.CryptoCurrency>[]))
          as _i4.Future<List<_i8.CryptoCurrency>>);
}

/// A class which mocks [AppDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppDatabase extends _i1.Mock implements _i11.AppDatabase {
  MockAppDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.UsedGpuDao get usedGpuDao =>
      (super.noSuchMethod(Invocation.getter(#usedGpuDao), returnValue: _FakeUsedGpuDao_0()) as _i2.UsedGpuDao);

  @override
  _i3.UserHashAlgorithmDao get userHashAlgorithmDao =>
      (super.noSuchMethod(Invocation.getter(#userHashAlgorithmDao), returnValue: _FakeUserHashAlgorithmDao_1())
          as _i3.UserHashAlgorithmDao);

  @override
  _i4.StreamController<String> get changeListener =>
      (super.noSuchMethod(Invocation.getter(#changeListener), returnValue: _FakeStreamController_2<String>())
          as _i4.StreamController<String>);

  @override
  set changeListener(_i4.StreamController<String>? _changeListener) =>
      super.noSuchMethod(Invocation.setter(#changeListener, _changeListener), returnValueForMissingStub: null);

  @override
  _i5.DatabaseExecutor get database =>
      (super.noSuchMethod(Invocation.getter(#database), returnValue: _FakeDatabaseExecutor_3())
          as _i5.DatabaseExecutor);

  @override
  set database(_i5.DatabaseExecutor? _database) =>
      super.noSuchMethod(Invocation.setter(#database, _database), returnValueForMissingStub: null);

  @override
  _i4.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}

/// A class which mocks [JsonReader].
///
/// See the documentation for Mockito's code generation for more information.
class MockJsonReader extends _i1.Mock implements _i12.JsonReader {
  MockJsonReader() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i13.Gpu>?> getGPUList() =>
      (super.noSuchMethod(Invocation.method(#getGPUList, []), returnValue: Future<List<_i13.Gpu>?>.value())
          as _i4.Future<List<_i13.Gpu>?>);

  @override
  _i4.Future<List<_i9.HashAlgorithm>> getHashAlgorithmsWithZeroValues() =>
      (super.noSuchMethod(Invocation.method(#getHashAlgorithmsWithZeroValues, []),
              returnValue: Future<List<_i9.HashAlgorithm>>.value(<_i9.HashAlgorithm>[]))
          as _i4.Future<List<_i9.HashAlgorithm>>);
}

/// A class which mocks [BackgroundTaskScheduler].
///
/// See the documentation for Mockito's code generation for more information.
class MockBackgroundTaskScheduler extends _i1.Mock implements _i14.BackgroundTaskScheduler {
  MockBackgroundTaskScheduler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> enable(int? minimumFetchInterval) =>
      (super.noSuchMethod(Invocation.method(#enable, [minimumFetchInterval]),
          returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);

  @override
  _i4.Future<void> disable() => (super.noSuchMethod(Invocation.method(#disable, []),
      returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}

/// A class which mocks [Gateway].
///
/// See the documentation for Mockito's code generation for more information.
class MockGateway extends _i1.Mock implements _i15.Gateway {
  MockGateway() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<bool> usedGpuChangedStream() =>
      (super.noSuchMethod(Invocation.method(#usedGpuChangedStream, []), returnValue: Stream<bool>.empty())
          as _i4.Stream<bool>);

  @override
  _i4.Stream<bool> userHashrateChangedStream() =>
      (super.noSuchMethod(Invocation.method(#userHashrateChangedStream, []), returnValue: Stream<bool>.empty())
          as _i4.Stream<bool>);

  @override
  _i4.Stream<bool> electricityCostChangedStream() =>
      (super.noSuchMethod(Invocation.method(#electricityCostChangedStream, []), returnValue: Stream<bool>.empty())
          as _i4.Stream<bool>);

  @override
  _i4.Future<void> dispose() => (super.noSuchMethod(Invocation.method(#dispose, []),
      returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);

  @override
  _i4.Future<List<_i8.CryptoCurrency>> getCryptoCurrenciesList({bool? isNeedFresh}) =>
      (super.noSuchMethod(Invocation.method(#getCryptoCurrenciesList, [], {#isNeedFresh: isNeedFresh}),
              returnValue: Future<List<_i8.CryptoCurrency>>.value(<_i8.CryptoCurrency>[]))
          as _i4.Future<List<_i8.CryptoCurrency>>);

  @override
  _i4.Future<List<_i13.Gpu>?> getGPUList() =>
      (super.noSuchMethod(Invocation.method(#getGPUList, []), returnValue: Future<List<_i13.Gpu>?>.value())
          as _i4.Future<List<_i13.Gpu>?>);

  @override
  _i4.Future<List<_i16.UsedGpu>> getUsedGPUList() => (super.noSuchMethod(Invocation.method(#getUsedGPUList, []),
      returnValue: Future<List<_i16.UsedGpu>>.value(<_i16.UsedGpu>[])) as _i4.Future<List<_i16.UsedGpu>>);

  @override
  _i4.Future<void> addUsedGpu(_i16.UsedGpu? usedGpu) => (super.noSuchMethod(Invocation.method(#addUsedGpu, [usedGpu]),
      returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteUsedGpu(String? id) => (super.noSuchMethod(Invocation.method(#deleteUsedGpu, [id]),
      returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);

  @override
  _i4.Future<List<_i9.HashAlgorithm>> getHashratesUsedInCalc() =>
      (super.noSuchMethod(Invocation.method(#getHashratesUsedInCalc, []),
              returnValue: Future<List<_i9.HashAlgorithm>>.value(<_i9.HashAlgorithm>[]))
          as _i4.Future<List<_i9.HashAlgorithm>>);

  @override
  _i4.Future<List<_i17.Earnings>> getEarningsList({bool? isNeedFresh}) =>
      (super.noSuchMethod(Invocation.method(#getEarningsList, [], {#isNeedFresh: isNeedFresh}),
          returnValue: Future<List<_i17.Earnings>>.value(<_i17.Earnings>[])) as _i4.Future<List<_i17.Earnings>>);

  @override
  _i4.Future<List<_i9.HashAlgorithm>> getEditedHashratesFromCache() =>
      (super.noSuchMethod(Invocation.method(#getEditedHashratesFromCache, []),
              returnValue: Future<List<_i9.HashAlgorithm>>.value(<_i9.HashAlgorithm>[]))
          as _i4.Future<List<_i9.HashAlgorithm>>);

  @override
  _i4.Future<void> updateEditedHashrateInCache(String? name, double? hashrateValue) =>
      (super.noSuchMethod(Invocation.method(#updateEditedHashrateInCache, [name, hashrateValue]),
          returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);

  @override
  _i4.Future<void> updateEditedPowerInCache(String? name, int? powerValue) =>
      (super.noSuchMethod(Invocation.method(#updateEditedPowerInCache, [name, powerValue]),
          returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);

  @override
  _i4.Future<void> updateHashratesInDB(List<_i9.HashAlgorithm>? hashrates) =>
      (super.noSuchMethod(Invocation.method(#updateHashratesInDB, [hashrates]),
          returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);

  @override
  _i4.Future<void> enableScheduler(int? interval) =>
      (super.noSuchMethod(Invocation.method(#enableScheduler, [interval]),
          returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);

  @override
  _i4.Future<void> disableScheduler() => (super.noSuchMethod(Invocation.method(#disableScheduler, []),
      returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);

  @override
  _i4.Future<_i6.Settings> getSettings() => (super.noSuchMethod(Invocation.method(#getSettings, []),
      returnValue: Future<_i6.Settings>.value(_FakeSettings_4())) as _i4.Future<_i6.Settings>);

  @override
  _i4.Future<void> setSettings(_i6.Settings? settings) =>
      (super.noSuchMethod(Invocation.method(#setSettings, [settings]),
          returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);

  @override
  _i4.Future<void> onElectricityCostChanged() => (super.noSuchMethod(Invocation.method(#onElectricityCostChanged, []),
      returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}

/// A class which mocks [UsedGpuDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockUsedGpuDao extends _i1.Mock implements _i2.UsedGpuDao {
  MockUsedGpuDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i18.UsedGpuEntity>> selectAll() => (super.noSuchMethod(Invocation.method(#selectAll, []),
          returnValue: Future<List<_i18.UsedGpuEntity>>.value(<_i18.UsedGpuEntity>[]))
      as _i4.Future<List<_i18.UsedGpuEntity>>);

  @override
  _i4.Future<void> deleteAll() => (super.noSuchMethod(Invocation.method(#deleteAll, []),
      returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);

  @override
  _i4.Future<void> insert(_i18.UsedGpuEntity? entity) => (super.noSuchMethod(Invocation.method(#insert, [entity]),
      returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);

  @override
  _i4.Future<_i18.UsedGpuEntity?> selectById(String? id) =>
      (super.noSuchMethod(Invocation.method(#selectById, [id]), returnValue: Future<_i18.UsedGpuEntity?>.value())
          as _i4.Future<_i18.UsedGpuEntity?>);

  @override
  _i4.Future<void> deleteById(String? id) => (super.noSuchMethod(Invocation.method(#deleteById, [id]),
      returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}

/// A class which mocks [UserHashAlgorithmDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserHashAlgorithmDao extends _i1.Mock implements _i3.UserHashAlgorithmDao {
  MockUserHashAlgorithmDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i19.UserHashAlgorithmEntity>> selectAll() => (super.noSuchMethod(Invocation.method(#selectAll, []),
          returnValue: Future<List<_i19.UserHashAlgorithmEntity>>.value(<_i19.UserHashAlgorithmEntity>[]))
      as _i4.Future<List<_i19.UserHashAlgorithmEntity>>);

  @override
  _i4.Future<void> deleteAll() => (super.noSuchMethod(Invocation.method(#deleteAll, []),
      returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);

  @override
  _i4.Future<void> insert(_i19.UserHashAlgorithmEntity? entity) =>
      (super.noSuchMethod(Invocation.method(#insert, [entity]),
          returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);

  @override
  _i4.Future<_i19.UserHashAlgorithmEntity?> selectById(String? id) =>
      (super.noSuchMethod(Invocation.method(#selectById, [id]),
          returnValue: Future<_i19.UserHashAlgorithmEntity?>.value()) as _i4.Future<_i19.UserHashAlgorithmEntity?>);

  @override
  _i4.Future<void> deleteById(String? id) => (super.noSuchMethod(Invocation.method(#deleteById, [id]),
      returnValue: Future<void>.value(), returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
